{
  "featuredProjects": [
    {
      "title": "Bruinwalk.com",
      "imageSrc": "projects/bruinwalk.png",
      "description": "Production-level contribution to UCLA's official course + professor review and rating platform with over 62K users and 1M monthly views. Worked on core backend features including grade distribution pipeline, enrollment distribution pipeline, and more.",
      "liveDemo": "https://bruinwalk.com",
      "github": "https://github.com/bruinwalk",
      "year": "2024",
      "technologies": [
        "React",
        "Python",
        "Django",
        "PostgreSQL",
        "DigitalOcean",
        "Kubernetes"
      ],
      "features": [
        "Course, professor, and apartment search system",
        "Enrollment distribution and availability display",
        "Grade distribution data display",
        "Rating and review functionality",
        "User authentication and profiles",
        "Backed by automatic real-time data via Django and PostgreSQL",
        "Mobile-responsive design with React, handling immense user traffic"
      ],
      "videos": [
        {
          "src": "about/bwalkdemo.mov",
          "caption": "Enrollment Distribution Feature: integrated UCLA API with internal backend API with live data via Kubernetes cronjob"
        },
        {
          "src": "about/bwalkdemo.mov",
          "caption": "Grade Distribution Feature: automatic quarterly updates and creation of new professors and courses, eliminating manual data entry"
        }
      ],
      "isFeatured": true
    },
    {
      "title": "UCLA D1 Tennis Filterable Data Match Viewer",
      "imageSrc": "projects/BSA.png",
      "description": "Full-stack web application for custom tennis match playback, allowing coaches to easily filter and search points by attributes for film review. Implemented advanced filtering algorithms and real-time video synchronization.",
      "liveDemo": "https://match-viewing-dashboard.web.app/",
      "github": "https://github.com/awest25/Tennis-Video-Viewer",
      "year": "2024",
      "technologies": [
        "React",
        "Node.js",
        "Firebase",
        "JavaScript",
        "CSS",
        "HTML"
      ],
      "features": [
        "Advanced point filtering system for players, coaches, scouts",
        "Real-time video playback controls",
        "Match data visualization backed by data science team",
        "Data acquisition specific site and tools",
        "Export and reporting functionality"
      ],
      "videos": [
        {
          "src": "about/bsademo.mov",
          "caption": "Filtering points and synchronized video playback"
        }
      ],
      "isFeatured": true
    }
  ],
  "personalProjects": [
    {
      "title": "PillPal",
      "imageSrc": "projects/pillpal.png",
      "description": "Full-stack mobile app that sends geolocation and time-based notifications to remind users to take their medications, track their medication intake, monitor adherence trends, and visualize health data.",
      "liveDemo": "",
      "github": "https://github.com/maxfukuh4ra/pillpal",
      "year": "2024",
      "technologies": [
        "React Native",
        "Node.js",
        "MongoDB",
        "Firebase",
        "Express.js",
        "TypeScript"
      ]
    },
    {
      "title": "Jam",
      "imageSrc": "projects/jam.png",
      "description": "Full-stack web app enabling users to search, follow users, and interact with their listening activity with likes. Integrated Spotify API to display users live-listening activity, weekly statistics, embedded song previews, and direct links.",
      "liveDemo": "https://www.youtube.com/watch?v=FfWPnGlTNsg",
      "github": "https://github.com/JensonW7/jam",
      "year": "2024",
      "technologies": [
        "React",
        "Node.js",
        "MongoDB",
        "Express.js",
        "Spotify API",
        "JavaScript"
      ]
    },
    {
      "title": "Reachify",
      "imageSrc": "projects/reachify.png",
      "description": "Python automated cold outreach system for LinkedIn. Utilized Selenium ChromeDriver to access provided LinkedIn profiles, BS4 to scrape, OpenAI API to generate message, Google API to automate sending emails.",
      "liveDemo": "",
      "github": "https://github.com/maxfukuh4ra/reachify",
      "year": "2024",
      "technologies": [
        "Python",
        "Selenium",
        "OpenAI API",
        "Google API",
        "BeautifulSoup",
        "LinkedIn API"
      ]
    },
    {
      "title": "Mancala",
      "imageSrc": "projects/mancala.png",
      "description": "Built an object-oriented C++ game utilizing binary search tree-based predictive AI to make best move possible against player.",
      "liveDemo": "",
      "github": "https://github.com/maxfukuh4ra/mancala",
      "year": "2023",
      "technologies": [
        "C++"
      ]
    },
    {
      "title": "Predicting DoorDash Deliveries",
      "imageSrc": "projects/ddd.png",
      "description": "From open-source Kaggle data-set, followed the DSLC to create a model using machine learning techniques such as linear regression to predict DoorDash deliveries.",
      "liveDemo": "",
      "github": "https://github.com/maxfukuh4ra/doordashdelivery",
      "year": "2023",
      "technologies": [
        "Python",
        "Pandas",
        "NumPy",
        "Scikit-learn",
        "PyTorch"
      ]
    }
  ]
}